{
  LinearLayout,
  orientation="vertical";
  layout_height="wrap";
  gravity="center";
  layout_width="-1";
  layoutTransition=LayoutTransition().enableTransitionType(LayoutTransition.CHANGING);
  paddingTop="8dp",
  paddingBottom="8dp",

  {
    MaterialCardView,
    layout_margin="4dp",
    layout_width='-1',
    --layout_height="200dp",
    Elevation=0;
    id="CardParent",
    --CardBackgroundColor=graph.修改颜色强度(5,mainColor),
    cardBackgroundColor=0,
    StrokeColor=lightForceColor,
    StrokeWidth=math.dp2int(2),
    radius=math.dp2int(16),
    {
      FrameLayout,
      id="frame",
      {
        View,
        layout_width='fill',
        layout_height='fill',
        id="ripple",
      },
      {
        RelativeLayout,
        layout_width='fill',
        layout_height='fill',
        {
          FrameLayout,
          --  background=graph.Ripple(nil,淡色强调波纹,"方"),

          {
            AppCompatImageView,
            scaleType="centerCrop",
            id="pic",
            layout_width="fill",
          },
          {
            View,
            layout_width='fill',
            layout_height='fill',
            background=上下渐变({getMaskColor()}),
          },
        },
        {
          LinearLayout,
          id="itemlayout";
          layout_width='fill',
          paddingTop="6dp",
          --backgroundDrawable=activity.Resources.getDrawable(ripples).setColor(ColorStateList(int[0].class{int{}},int{淡色强调波纹}));

          paddingBottom="6dp",
          layout_height='fill',
          focusable="true";
          gravity="center|left";
          {
            LinearLayout,
            layout_width='fill',
            layout_height='fill',
            id="card",
            orientation="vertical";
            gravity="top|left";
            --onClick=(lambda -> task(50,lambda -> mainItem[func].onClick())),
            {
              AppCompatImageView;
              layout_height="30dp";
              layout_width="30dp";
              layout_margin="16dp";
              --ImageResource=img;
              id="img",
              colorFilter=icon,
            };
            {
              AppCompatTextView;
              textColor=textColor;
              paddingLeft="24dp",
              typeface=Typeface.defaultFromStyle(Typeface.BOLD);
              --layout_weight="1";
              Text=text,
              id="text";
            };

          };
        },
      },
    },
    {
      View,
      layout_width='fill',
      layout_height='fill',
      background=graph.Ripple(nil,淡色强调波纹,"方"),
    },
  },
}